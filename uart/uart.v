
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module uart(

    //////////// CLOCK //////////
    input                       CLOCK2_50,
    input                       CLOCK3_50,
    input                       CLOCK4_50,
    input                       CLOCK_50,

    //////////// GPIO, GPIO connect to GPIO Default //////////
    inout           [35:0]      GPIO,

    // after adding this entry, recompile so that these pins show up in the pin planner.
    output [3:0] LED
);



//=======================================================
//  REG/WIRE declarations
//=======================================================

    wire clock;
    assign clock = CLOCK_50;

    wire clock_25mhz;

    wire locked;

    //b_pll baudrate_pll (
    //	.refclk(clock), //input  wire  refclk,   //  refclk.clk
    //	.rst(0), //input  wire  rst,      //   reset.reset
    //	.outclk_0(clock_25mhz), //output wire  outclk_0, // outclk0.clk
    //	.locked(locked) // output wire  locked    //  locked.export
    //);

    baudrate_pll b_pll (
        clock, //input  wire  refclk,   //  refclk.clk
        0, //input  wire  rst,      //   reset.reset
        clock_25mhz, //output wire  outclk_0, // outclk0.clk
        locked // output wire  locked    //  locked.export
    );

    counter ctr(1, clock_25mhz, LED[0]);

    //wire baud_rate;

    //	BaudTickGen baud_tick_gen (
    //		clock_25mhz, 
    //		1, 
    //		baud_rate
    //	);

    //parameter ClkFrequency = 25000000;	// 25MHz
    //parameter Baud = 115200;
    //BaudTickGen #(ClkFrequency, Baud) tickgen(.clk(clk), .enable(TxD_busy), .tick(BitTick));

    // SOURCE: https://www.fpga4fun.com/SerialInterface5.html

    wire RxD; // Physial PIN 38, GPIO_D33 - 3.3-V LVTTL
    assign RxD = GPIO[33];
    //wire TxD; // Physial PIN 40, GPIO_D35 - 3.3-V LVTTL
    //assign TxD = GPIO[35];

    wire TxD_busy;

    wire RxD_data_ready;
    wire [7:0] RxD_data;
    wire [7:0] TxD_data;

    async_receiver RX(
        .clk(clock_25mhz), 
        .RxD(RxD), 
        .RxD_data_ready(RxD_data_ready), 
        .RxD_data(RxD_data)
    );

    //always @(posedge clk) if(RxD_data_ready) GPout <= RxD_data;

    async_transmitter TX(
        .clk(clock_25mhz), 
        .TxD_start(RxD_data_ready),
        .TxD_data(RxD_data),
        .TxD(GPIO[35]),
        .TxD_busy(TxD_busy)
    );

    // Quartus Prime MenuBar > Assignments > PIN Planner

    // Uploading the design:
    // 1. Open Tools > Programmer
    // Info: The chip on the DE10 Standard is: 5CSXFC6D6F31   (SE 5CSXFC6D6F31C6N)
    //       Mode: JTAG
    // 2. Processing > Auto Detect > Select: 5CSXFC6D6
    // 3. There is a warning, ignore it

//=======================================================
//  Structural coding
//=======================================================





endmodule
